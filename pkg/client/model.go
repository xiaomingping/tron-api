package client

import "github.com/shopspring/decimal"

type BalanceModel struct {
	Trx  string `json:"trx"`  // trx 余额
	GLV  string `json:"glv"`  // glv 余额
	Usdt string `json:"usdt"` // u 余额
}

// Contract 合约 TRC20 和 TRC10
type Contract struct {
	Name                string          `toml:"name"`       // USDT BTT
	Type                string          `toml:"type"`       // TRC20 和 TRC10
	Contract            string          `toml:"contract"`   // 合约地址或者合约ID
	Decimal             int32           `toml:"decimal"`    // 合约小数位
	CollectionMinAmount decimal.Decimal `toml:"min_amount"` // 代币最小归集数目
}

// 用户信息
type GetAccountModel struct {
	LatestOprationTime int64 `json:"latest_opration_time"`
	OwnerPermission    struct {
		Keys           []KeysAddress `json:"keys"`
		Threshold      int           `json:"threshold"`
		PermissionName string        `json:"permission_name"`
	} `json:"owner_permission"`
	FreeAssetNetUsagev2 []Keys `json:"free_asset_net_usageV2"`
	AccountResource     struct {
		LatestConsumeTimeForEnergy int64 `json:"latest_consume_time_for_energy"`
	} `json:"account_resource"`
	ActivePermission []struct {
		Operations     string        `json:"operations"`
		Keys           []KeysAddress `json:"keys"`
		Threshold      int           `json:"threshold"`
		ID             int           `json:"id"`
		Type           string        `json:"type"`
		PermissionName string        `json:"permission_name"`
	} `json:"active_permission"`
	Assetv2               []Keys              `json:"assetV2"`
	Address               string              `json:"address"`
	Balance               int                 `json:"balance"`
	CreateTime            int64               `json:"create_time"`
	Trc20                 []map[string]string `json:"trc20"`
	LatestConsumeFreeTime int64               `json:"latest_consume_free_time"`
}

type RespAccount struct {
	Data    []GetAccountModel `json:"data"`
	Success bool              `json:"success"`
	Meta    Meta              `json:"meta"`
}

type Meta struct {
	At       int64 `json:"at"`
	PageSize int   `json:"page_size"`
}

type Keys struct {
	Value int    `json:"value"`
	Key   string `json:"key"`
}
type KeysAddress struct {
	Address string `json:"address"`
	Weight  int    `json:"weight"`
}

type RespTransactionsTrc20 struct {
	Data    []TransactionsTrc20Model `json:"data"`
	Success bool                     `json:"success"`
	Meta    struct {
		At       int64 `json:"at"`
		PageSize int   `json:"page_size"`
	} `json:"meta"`
}

type TransactionsTrc20Model struct {
	TransactionID  string    `json:"transaction_id"`
	TokenInfo      TokenInfo `json:"token_info"`
	BlockTimestamp int64     `json:"block_timestamp"`
	From           string    `json:"from"`
	To             string    `json:"to"`
	Type           string    `json:"type"`
	Value          string    `json:"value"`
}

type TokenInfo struct {
	Symbol   string `json:"symbol"`
	Address  string `json:"address"`
	Decimals int32  `json:"decimals"`
	Name     string `json:"name"`
}

type GettransactioninfobyidModel struct {
	ID              string   `json:"id"`
	Fee             int      `json:"fee"`            // 燃烧手续费
	Blocknumber     int      `json:"blockNumber"`    // 块高度
	Blocktimestamp  int64    `json:"blockTimeStamp"` // 生产块时间
	Contractresult  []string `json:"contractResult"` // 调用合约结果
	ContractAddress string   `json:"contract_address"`
	Receipt         struct {
		EnergyUsage       int    `json:"energy_usage"`
		EnergyFee         int    `json:"energy_fee"`
		OriginEnergyUsage int    `json:"origin_energy_usage"`
		EnergyUsageTotal  int    `json:"energy_usage_total"`
		NetFee            int    `json:"net_fee"`
		Result            string `json:"result"`
	} `json:"receipt"`
	Log []struct {
		Address string   `json:"address"`
		Topics  []string `json:"topics"`
		Data    string   `json:"data"`
	} `json:"log"`
}

// Contract 合约 TRC20 和 TRC10
type ContractModel struct {
	Name     string `toml:"name"`     // USDT BTT
	Type     string `toml:"type"`     // TRC20 和 TRC10
	Contract string `toml:"contract"` // 合约地址或者合约ID
	Decimal  int32  `toml:"decimal"`  // 合约小数位
}

type TransferData struct {
	TxId        string `json:"tx_id"`        // 转账id
	FormAddress string `json:"form_address"` // 转账地址
	ToAddress   string `json:"to_address"`   // 收款地址
	Contract    string `toml:"contract"`     // 合约地址或者合约ID
	Amount      int64  `json:"amount"`       // 数量
}

// ===================================================================================================
/**
合约TRC20交易信息
*/
type AutoGenerated struct {
	CallerContractAddress string     `json:"caller_contract_address"`
	Result                Result     `json:"result"`
	TransactionID         string     `json:"transaction_id"`
	ResultType            ResultType `json:"result_type"`
	BlockTimestamp        int64      `json:"block_timestamp"`
	BlockNumber           int        `json:"block_number"`
	EventName             string     `json:"event_name"`
	ContractAddress       string     `json:"contract_address"`
	Event                 string     `json:"event"`
	EventIndex            int        `json:"event_index"`
}
type Result struct {
	Num0  string `json:"0"`
	Num1  string `json:"1"`
	Num2  string `json:"2"`
	From  string `json:"from"`
	To    string `json:"to"`
	Value string `json:"value"`
}
type ResultType struct {
	From  string `json:"from"`
	To    string `json:"to"`
	Value string `json:"value"`
}

type ContractBlockInfo struct {
	TransactionID   string `json:"transaction_id"`   // 交易hash
	BlockNumber     int    `json:"block_number"`     // 块高度
	EventName       string `json:"event_name"`       // 调用函数
	BlockTimestamp  int64  `json:"block_timestamp"`  // 时间
	ContractAddress string `json:"contract_address"` // 合约地址
	From            string `json:"from"`             // 转出地址
	To              string `json:"to"`               // 转入地址
	Value           string `json:"value"`            // 金额
	EventIndex      int    `json:"event_index"`      // 调用状态
}

// 最新块信息
type NewBlock struct {
	Block []Block `json:"block"`
}
type Block struct {
	BlockID      string         `json:"blockID"`
	BlockHeader  BlockHeader    `json:"block_header"`
	Transactions []Transactions `json:"transactions"`
}

type BlockHeader struct {
	RawData struct {
		Number         int    `json:"number"`
		TxTrieRoot     string `json:"txTrieRoot"`
		WitnessAddress string `json:"witness_address"`
		ParentHash     string `json:"parentHash"`
		Version        int    `json:"version"`
		Timestamp      int64  `json:"timestamp"`
	} `json:"raw_data"`
	WitnessSignature string `json:"witness_signature"`
}

type Transactions struct {
	Ret []struct {
		ContractRet string `json:"contractRet"`
	} `json:"ret"`
	Signature  []string `json:"signature"`
	TxID       string   `json:"txID"`
	RawData    RawData  `json:"raw_data"`
	RawDataHex string   `json:"raw_data_hex"`
}

type RawData struct {
	Contract      []ContractData `json:"contract"`
	RefBlockBytes string         `json:"ref_block_bytes"`
	RefBlockHash  string         `json:"ref_block_hash"`
	Expiration    int64          `json:"expiration"`
	FeeLimit      int            `json:"fee_limit"`
	Timestamp     int64          `json:"timestamp"`
}
type ContractData struct {
	Parameter Parameter `json:"parameter"`
	Type      string    `json:"type"`
}
type Parameter struct {
	Value   interface{} `json:"value"`
	TypeURL string      `json:"type_url"`
}

type Value struct {
	Data            string `json:"data"`
	OwnerAddress    string `json:"owner_address"`
	ContractAddress string `json:"contract_address"`
}

type Trc struct {
	Amount       int64  `json:"amount"`
	OwnerAddress string `json:"owner_address"`
	ToAddress    string `json:"to_address"`
}
